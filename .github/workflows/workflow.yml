name: Build and Push Docker image to ECR

on:
  push:
    branches:
      - master # Adjust this to your branch name


jobs:
  build-and-push:
    name: Build and Push Docker image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: AKIAQTRELBQXGI6O57ND
      #     aws-secret-access-key: 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
      #     aws-region: us-east-1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: nginx
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
          
      - name: Copy Docker Compose file to EC2
        env:
            KEY: ${{secrets.EC2_SSH_PRIVATE_KEY}}
        run: |
          pwd
          ls
          cat docker-compose.yml
          ls $KEY
        #  ssh -o StrictHostKeyChecking=no -i ${{secrets.EC2_SSH_PRIVATE_KEY}} ubuntu@52.71.255.212

        #  ls /home/runner/work/nginx-app/nginx-app
          # ssh -o StrictHostKeyChecking=no -i ${{secrets.EC2_SSH_PRIVATE_KEY}} ubuntu@52.71.255.212
          # ls
        # scp -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_PRIVATE_KEY }} docker-compose.yml ubuntu@52.71.255.212:/home/ubuntu/  
        #  echo "$EC2_SSH_PRIVATE_KEY" > private_key && chmod 400 private_key
        # ssh -o StrictHostKeyChecking=no -i ${{EC2_SSH_PRIVATE_KEY}} ubuntu@52.71.255.212  

        # curl -LJO https://raw.githubusercontent.com/sureshkumarc46/nginx-app/main/docker-compose.yml

         
